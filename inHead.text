
import React from 'react';
import { useRouter } from 'next/router';
import styles from './styles.scss';

const InHead = () => {
  const router = useRouter();
  const currentPath = router.pathname.toLowerCase();

  const steps = [
    { path: '/flightresult', label: 'Flight', icone: <i className="im-passprt" /> },
    { path: '/passengerdetails', label: 'Passengers', icone: <i className="im-chld-trvl" /> },
    { path: '/baggage', label: 'Baggages', icone: <i className="im-infnt-trvl" /> },
    { path: '/seatselection', label: 'Seats', icone: <i className="im-check-ico" /> },
    { path: '/services', label: 'Services', icone: <i className="im-alert-icon" /> },
    { path: '/payment', label: 'Payment', icone: <i className="im-standard-up" /> },
  ];

  const currentStepIndex = steps.findIndex((step:any) => step.path === currentPath);

  return (
    <div className={styles.activeBar}>
      <div className={styles.mobileView}>
        {steps[currentStepIndex] && (
          <div className={`${styles.step} ${styles.current}`}>
            {steps[currentStepIndex].icone}
            <span className={styles.stepLabel}>{steps[currentStepIndex].label}</span>
          </div>
        )}
        <div className={styles.progressIndicator}>
          Step {currentStepIndex + 1}/{steps.length}
        </div>
      </div>

      <div className={styles.desktopView}>
        {steps.map((step, index) => {
          const status =
            index < currentStepIndex
              ? 'done'
              : index === currentStepIndex
              ? 'current'
              : 'upcoming';

          const icon =
            status === 'done' ? (
              <i className="fo-icon icon-fo-tick-round" />
            ) : (
              step.icone
            );

          return (
            <div
              key={step.path}
              className={`${styles.step} ${styles[status as keyof typeof styles]}`}>
              {icon}
              <span className={styles.stepLabel}>{step.label}</span>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export default InHead;



css -------------------------------------------------------------------------------


.activeBar {
  display: flex;
  flex-direction: column;
  margin-bottom: 10px;
  border: 15px solid #e6e7e1;
  padding: 12px 30px;
}

/* Mobile View: Show Only Active Step */
.mobileView {
  display: none; /* Hidden by default */
  text-align: center;
  align-items: center;

  @media (max-width: 480px) {
    display: flex; /* Visible only on mobile */
    flex-direction: row; /* Arrange items in a row */
    justify-content: space-between; /* Add space between elements */
    align-items: center; /* Vertically align items */
    width: 100%;
    padding: 0 10px; /* Add some padding */
  }
}

.mobileView .step {
  display: flex;
  align-items: center;
}

.mobileView .progressIndicator {
  font-size: 0.9rem;
  font-weight: bold;
  color: #304296;
}

/* Desktop/Tablet View: Show All Steps */
.desktopView {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  @media (max-width: 480px) {
    display: none; /* Hidden on mobile */
  }
}

/* Individual steps */
.step {
  display: flex;
  align-items: center;
  margin-right: 15px;
}

.stepLabel {
  margin-left: 8px;
}

/* Status Styles */
.done {
  color: #28a745;
}

.current {
  color: #304296;
}

.upcoming {
  color: gray;
}

/* Icon Styling */
i {
  font-size: 1.2rem;
  margin-right: 8px;
}
