"use client";
import "./Profile.scss";
import { FaArrowLeft, FaRegCalendar } from "react-icons/fa";
import { useAppDispatch, useAppSelector } from "@/lib/store";
import { useEffect, useState } from "react";
import { getupdateProfile } from "@/lib/authSlice";
import { Offcanvas } from "react-bootstrap";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

const Profile = ({ showProfile, handleCloseProfile }: any) => {
  const userdata = useAppSelector((state: any) => state?.auth?.userData);
  const dispatch = useAppDispatch();
  
  const [isDobOpen, setIsDobOpen] = useState(false);
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [dateOfBirth, setDateOfBirth] = useState<Date | null>(null);

  useEffect(() => {
    if (showProfile && userdata) {
      setFirstName(userdata?.firstName || "");
      setLastName(userdata?.lastName || "");
      setDateOfBirth(userdata?.dateOfBirth ? new Date(userdata?.dateOfBirth) : null);
    }
  }, [showProfile, userdata]);

  const handleDateChange = (date: Date | null) => {
    setDateOfBirth(date);
    setIsDobOpen(false);
  };

  const handleProfils = () => {
    const updatedProfile = {
      firstName,
      lastName,
      dateOfBirth,
    };
    dispatch(getupdateProfile(updatedProfile));
  };

  return (
    <>
      <Offcanvas show={showProfile} onHide={handleCloseProfile}>
        <Offcanvas.Header className="profile-bg">
          <div className="myprofile">
            <FaArrowLeft onClick={handleCloseProfile} />
            Personal details
          </div>
        </Offcanvas.Header>
        <Offcanvas.Body>
          <div className="profile-form-login-page">
            <form>
              <div className="row">
                <div className="col-6 ctpr">
                  <div className="input-div">
                    <input
                      type="text"
                      className="form-control"
                      placeholder=" "
                      required
                      value={firstName}
                      onChange={(e) => setFirstName(e.target.value)}
                    />
                    <label>First Name</label>
                  </div>
                </div>

                <div className="col-6 ctpl">
                  <div className="input-div">
                    <input
                      type="text"
                      className="form-control"
                      placeholder=" "
                      required
                      value={lastName}
                      onChange={(e) => setLastName(e.target.value)}
                    />
                    <label>Last Name</label>
                  </div>
                </div>

                <div className="col-6 ctpl">
                  <div className="input-div">
                    <input
                      type="text"
                      className="form-control"
                      placeholder=" "
                      required
                      value={dateOfBirth ? new Date(dateOfBirth).toLocaleDateString() : ""}
                      onClick={() => setIsDobOpen(true)}
                      readOnly
                    />
                    <span className="f-icon">
                      <FaRegCalendar />
                    </span>
                    <label>Date Of Birth</label>
                  </div>
                </div>

                {isDobOpen && (
                  <DatePicker
                    selected={dateOfBirth}
                    onChange={handleDateChange}
                    onClickOutside={() => setIsDobOpen(false)}
                    peekNextMonth
                    showMonthDropdown
                    showYearDropdown
                    dropdownMode="select"
                    inline
                  />
                )}

                <div className="col-12">
                  <div onClick={handleProfils} className="save-btn">
                    Save
                  </div>
                </div>
              </div>
            </form>
          </div>
        </Offcanvas.Body>
      </Offcanvas>
    </>
  );
};

export default Profile;
